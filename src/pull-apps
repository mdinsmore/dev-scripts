#! /bin/bash
APP_DIR=$HOME/dev/app

APP_LIST=$(ls ${APP_DIR})
RED="$(echo -e "\033[0;31m")"
BLUE="$(echo -e "\033[0;34m")"
GREEN="$(echo -e "\033[0;32m")"
NC="$(echo -e "\033[0m")"

if [ "$1" != "" ]; then
    APP_LIST=$1
fi

echo "App|Branch|Status" | awk  -F \| '{ printf "%-15.15s  %-20.20s %s \n", $1, $2, $3 }'

for APP in ${APP_LIST}; do
    cd ${APP_DIR}/${APP}
    echo -e "\rUpdating ${APP} ...\c"
    untracked-branches > /tmp/untracked-branches-$$ 2>&1
    git merge FETCH_HEAD >> /tmp/app-pull-$$ 2>&1
    git remote update > /dev/null 2>&1
    git status > /tmp/app-status-$$
    BRANCH=$(grep "^On branch" /tmp/app-status-$$ | cut -c10-)
    STATUS=$(grep "^Your branch is" /tmp/app-status-$$ | cut -c15-)
    STATUS_UP_TO_DATE=$(echo ${STATUS} | grep "up to date")
    grep "^Changes" /tmp/app-status-$$ > /tmp/app-status-$$-a
    grep "^Untracked" /tmp/app-status-$$ >> /tmp/app-status-$$-a
    CHANGES=$(cat /tmp/app-status-$$-a | cut -d: -f1 | sed ':a;N;$!ba;s/\n/ and /g')
    if [ "${STATUS_UP_TO_DATE}" != "" -o "${CHANGES}" = "" ];then
        COLOUR=${GREEN}
    else
        COLOUR=${RED}
    fi

    PULL=$(cat /tmp/app-pull-$$)
    UNTRACKED=$(cat /tmp/untracked-branches-$$ | grep "No untracked branches")
    if [ "${PULL}" != "Already up-to-date." -o "${UNTRACKED}" = "" ]; then
        echo -e "\r============================================================="
        echo "${APP}"
        echo "-------------------------------------------------------------"
        if [ "$PULL" != "Already up-to-date." ]; then
            cat /tmp/app-pull-$$
        fi
        if [ "${UNTRACKED}" = "" ]; then
            echo "Untracked branches"
            cat /tmp/untracked-branches-$$
        fi
    fi
    

    echo "${COLOUR}|${APP}|${BRANCH}|${STATUS}|${CHANGES}|${NC}" | awk  -F \| '{ printf "\r%s%-15.15s %-20.20s %s %s%s\n", $1, $2, $3, $4, $5, $6 }'
    rm /tmp/app-pull-$$ /tmp/app-status-$$ /tmp/app-status-$$-a /tmp/untracked-branches-$$
done
