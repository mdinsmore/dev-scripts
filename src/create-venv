#!/bin/bash
if [ -z "$1" ]; then
	echo -e "\nUsage:\n"
	echo -e "\t`basename $0` <venv> [--no-ipdb|--production|--toml]"
	echo -e "\nWhere:\n"
	echo -e "\t<venv> - is the name of the <name of virtual environment (exluding"
	echo -e "\t    the 'venv-' prefix)>\n"
	echo -e "\t--no-ipdb - don't install ipdb and black"
	echo -e "\t--production - use the production requirements"
	echo -e "\t--toml - use a pyproject.toml to install the project"
	echo -e "\n\tBy default the search order for requirements files is:"
	echo -e "\t\trequirements/local.txt"
	echo -e "\t\trequirements.txt"
	echo -e "\t\tpyproject.toml"
	exit 1
fi

if [ "`which deactivate`" != "" ];then
	deactivate
fi

VENV="venv-$1"

if [ -d "${VENV}" ]; then
	echo "The virtual environment ${VENV} already exists"
	exit
else
	echo -e "Create virtual environment: ${VENV}"
	echo -e "---------------------------"
fi

INSTALL_IPDB=true

create-dot-env

if [ "$2" != "" ];then
	if [ "$2" = "--production" ]; then
		REQUIREMENTS="requirements/production.txt"
	fi
	if [ "$2" = "--no-ipdb" ]; then
		INSTALL_IPDB=
	fi
	if [ "$2" = "--toml" ]; then
		REQUIREMENTS="pyproject.toml"
	fi
fi

if [ "$REQUIREMENTS" = "" ]; then
	if [ -f requirements/local.txt ]; then
	    REQUIREMENTS=requirements/local.txt
	elif [ -f requirements.txt ]; then
		REQUIREMENTS=requirements.txt
	elif [ -f pyproject.toml ]; then
		REQUIREMENTS=pyproject.toml
	fi
fi

if [ "$REQUIREMENTS" = "" -o ! -f "$REQUIREMENTS" ]; then
	echo "\n *** No requirements file ($REQUIREMENTS) found ***\n"
	REQUIREMENTS=""
fi

python3 -m venv ${VENV} && \
source ${VENV}/bin/activate && \
pip install --upgrade wheel pip && \
if [ "$REQUIREMENTS" != "" ];then
	if [ "$REQUIREMENTS" = "pyproject.toml" ];then
		echo "Installing using pyproject.toml"
		# pip install -e .
	else 
		echo "Installing using $REQUIREMENTS"
		pip install -r ${REQUIREMENTS}
	fi
fi

RETURN=$?

if [ $INSTALL_IPDB ]; then
	echo "INSTALLING IPDB AND BLACK $INSTALL_IPDB\n"
	pip install ipdb black
fi

if [ $RETURN = 0 -a $? = 0 ];then
	echo -e "\n*************************************************"
	echo -e   "* Now run cd . to activate your new environment *"
	echo -e   "*************************************************\n"
else
	echo -e "\n********************************************************************************"
	echo -e   "* An error occurred please fix this issue and recreate the virtual environment *"
	echo -e   "********************************************************************************\n"
fi

