#!/bin/bash
CUR_DIR=$(pwd)

TOOLBOX_DIR=$HOME/dev/module/toolbox

if [ -d ${TOOLBOX_DIR} ]; then
	cd ${TOOLBOX_DIR} && git pull && cd ${CUR_DIR}
else
	echo -e "\n\nCould not find Toolbox directory ${TOOLBOX_DIR}"
	exit
fi
TOOLBOX_VE=$(ls -d $TOOLBOX_DIR/venv-* 2>/dev/null | head -n 1)
source $TOOLBOX_DIR/.private
if [ "$TOOLBOX_VE" = "" ]; then
	echo -e "\n\nCould not find the virtual environment in $TOOLBOX_DIR/"
	exit
fi
if [ "${COMPANY_PREFIX}" = "" -o "${PYPIRC_SECTION}" = "" ]; then
	echo -e "\n\nYou need to  add the following exports:"
	echo -e "\n\texport COMPANY_PREFIX=<your company prefix>"
	echo -e "\n\texport PYPIRC_SECTION=<section in ~/.pypirc that contains your pypi server address>"
	echo -e "\n to $TOOLBOX_DIR/.private\n"
	exit
fi
PROD_REQUIREMENTS="requirements/production.txt"
requirements -p
echo ""

if [ "$1" = "--first" ]; then
	FIRST_UPLOAD=true
fi

PYPI_SERVER="$(grep index-url $HOME/.config/pip/pip.conf | awk '{ print $3 }')"
package=`tr -d ' ' < setup.py| grep "^name=" | sed -e 's/name=//g' | sed -e 's/,//g' | sed "s/^\([\"']\)\(.*\)\1\$/\2/g"`
version=`tr -d ' ' < setup.py| grep "^version=" | sed -e 's/version=//g' | sed -e 's/,//g' | sed "s/^\([\"']\)\(.*\)\1\$/\2/g"`
if [ "$package" = "" ]; then
	echo "Cannot identify package - ABORTING"
	exit 2
fi
prefix="${package}-"
suffix=".tar.gz"
outfile="/tmp/$package-$$.tmp"
wget -O ${outfile} ${PYPI_SERVER}${package} 2> /dev/null
if [ ! -s ${outfile} ];then
	echo -e "Cannot get data on this package from the pypi server \"$PYPI_SERVER\""
	echo -e "If this is the first release of this package run with the --first option\n"
	if [ "${FIRST_UPLOAD}" = "true" ]; then
		released_version="UNKNOWN"
	else
		exit
	fi
else
	tmp=`grep "^kb/dev" ${outfile}  | grep ${package} | head -1 | cut -d'>' -f2 | cut -d'<' -f1`
	tmp=${tmp#$prefix}
	released_version=${tmp%$suffix}
fi

echo "Last released version on pydev is : ${released_version}"

if [ "${version}" != "${released_version}" ];then
	echo "Previous Version on this branch   : ${version}"
	echo ""
	echo "*****************************************************************"
	echo "* Please note the latest released verion is not the same as the *"
	echo "* last version released from the current source tree            *"
	echo "*****************************************************************"
fi
echo ""

DO_RELEASE="X"

while [ "${DO_RELEASE,,}" != 'y' -a "${DO_RELEASE,,}" != 'n' ]
do
	if [ -f ${PROD_REQUIREMENTS} ]; then
		echo "******************************************************************************"
		echo "* Ensure that the app versions above are correct and that you have run tests *"
		echo "******************************************************************************"
	else
		echo "*****************************"
		echo "* Ensure you have run tests *"
		echo "*****************************"
	fi
	echo ""
	echo -e "\nCorrect (y/N) \c"
	read DO_RELEASE
done

if [ "${DO_RELEASE,,}" = 'y' ]
then
	source $TOOLBOX_VE/bin/activate && \
	python $TOOLBOX_DIR/kb.py --release --prefix=${COMPANY_PREFIX} --pypi=${PYPIRC_SECTION} && \
	cd . && git push
else
	echo "Aborted"
fi
