#!/bin/bash
unset cd
RED="\033[0;31m"
BLUE="\033[0;34m"
GREEN="\033[0;32m"
NC="\033[0m"

function print_title {
  TITLE=$1
  echo -e "\n${RED}${TITLE}${NC}"
  CHAR_COUNT=${#TITLE}
  for ((i=0;i<$CHAR_COUNT; i++)); do
    echo -e "-\c"
  done
  echo ""
}

function print_separator {
    echo "====================================================="
}

SEP_REQUIRED=""
COUNT=0

for TYPE in app project module; do
    DIR="${HOME}/dev/${TYPE}"
    cd ${DIR}

    for i in `ls`; do
        if [ -d $i/.git ]; then
            cd $i
            git status > /tmp/$$
            IS_UP_TO_DATE=$(grep "Your branch is up-to-date with " /tmp/$$)
            NOT_STAGED=$(grep "Changes not staged for commit:" /tmp/$$)
            STAGED=$(grep "Changes to be committed:" /tmp/$$)
            UNTRACKED=$(grep "Untracked files:" /tmp/$$)
            if [ "${IS_UP_TO_DATE}" != "" -a "${NOT_STAGED}" == "" -a "${STAGED}" == "" -a "${UNTRACKED}" == "" ];then
                echo -e "${GREEN}${TYPE^^}: $i is up to date${NC}"
                SEP_REQUIRED="yes"
            else
                REMOTE="$(git remote -v)"
                if [ "${REMOTE}" == "" ]; then
                    echo -e "${BLUE}${TYPE^^}: $i has no remote repository${NC}"
                else
                    COUNT=$(expr ${COUNT} + 1)
                    if [ "${SEP_REQUIRED}" != "" ]; then
                        print_separator
                    fi
                    print_title "${TYPE^^}: $i"
                    cat /tmp/$$
                    print_separator
                    SEP_REQUIRED=""
                fi
            fi
            cd ..
        fi
    done
done

if [ ${COUNT} -eq 0 ];then
    echo -e "\n${GREEN}All repositories are up to date${NC}\n"
else
    echo -e "\n${RED}${COUNT} repositories have outstanding actions${NC}\n"
fi
