#!/bin/bash
if [ "$3" = "" ];then
    echo -e "\nUsage:"
    echo -e "\t$(basename $0) <project group> <name> <description> [-m <master file> | -o <output path> | -d]\n\n"
    echo -e "\nWhere:\n\t<project name> is the name of your project group on your cloud repository"
    echo -e "\n\t<name> is the name of your project"
    echo -e "\n\t<description> is a short description of your project"
    echo -e "\n\t-m <master file> is the name of the master file in your project (default styles.scss)"
    echo -e "\n\t-o <output path> is the name of the css file used in your project (default css/styles.scss unless the -d option is specified when the default is web/static/web/css/web.css)"
    echo -e "\n\t-d specifies that this is a django project, this creates a django-server run option and runs this when your run  \"npm run serve\" "
    exit
fi
PROJECT_GROUP="$1"
PROJECT_NAME="$2"
PROJECT_DESC="$3"
PROJECT_AUTHOR="$USER"
PROJECT_URL="https://gitlab.com/${PROJECT_GROUP}/${PROJECT_NAME}.git"
MASTER_FILE=styles.scss

shift 3

while getopts "dm:o:" opt; do
    case ${opt} in
    d)
        DJANGO_PROJECT=true
        ;;
    m)
        MASTER_FILE="$OPTARG"
        ;;
    o)
        OUTPUT_PATH="$OPTARG"
        ;;
    \?)
        echo "Invalid argument: -${opt}"
        exit 2
        ;;
    esac
done

if [ "${DJANGO_PROJECT}" ]; then
    if [ "${OUTPUT_PATH}" = "" ]; then
        OUTPUT_PATH=web/static/web/css/web.css
    fi

    MINIFY_PATH=web/static/wev/css/web.min.css
    SERVE_OPTION="\"django-server\": \"django-admin runserver 0.0.0.0:8000\",\n     \"serve\": \"npm-run-all -l -p scss-watch django-server\"\n"
else
    if [ "${OUTPUT_PATH}" = "" ]; then
        OUTPUT_PATH=css/styles.css
    fi

    MINIFY_PATH=css/styles.min.css
    SERVE_OPTION="\"serve\": \"npm-run-all -l -p scss-watch live-server\"\n"
fi

if [ ! -f package.json ];then
    echo -e "{\n" \
        "  \"name\": \"${PROJECT_NAME}\",\n" \
        "  \"version\": \"2.0.0\",\n" \
        "  \"description\": \"${PROJECT_DESC}\",\n" \
        "  \"main\": \"index.js\",\n" \
        "  \"scripts\": {\n" \
        "    \"scss-compile\": \"node-sass scss/${MASTER_FILE} ${OUTPUT_PATH} --output-style expanded --source-map true\",\n" \
        "    \"scss-minify\": \"node-sass scss/${MASTER_FILE} ${MINIFY_PATH} --output-style compressed\",\n" \
        "    \"scss-watch\": \"node-sass -w scss/${MASTER_FILE} ${OUTPUT_PATH} --output-style expanded --source-map true\",\n" \
        "    \"live-server\": \"live-server --port=4200\",\n" \
        "    ${SERVE_OPTION}" \
        "  },\n" \
        "  \"repository\": {\n" \
        "    \"type\": \"git\",\n" \
        "    \"url\": \"${PROJECT_URL}\"\n" \
        "  },\n" \
        "  \"author\": \"$PROJECT_AUTHOR\",\n" \
        "  \"license\": \"ISC\",\n" \
        "  \"devDependencies\": {\n" \
        "    \"live-server\": \"^1.2.1\",\n" \
        "    \"node-sass\": \"^4.12.0\",\n" \
        "    \"npm-run-all\": \"^4.1.5\"\n" \
        "  }\n" \
        "}\n" > package.json
    echo "Running npm install..."
    npm install
    npm install --package-lock-only
    npm audit
else
    echo -e "package.json already exists - you will need to configure manually"
    echo -e "and then run \"npm install\"\n"
fi

mkdir -p scss
cd scss
mkdir -p abstracts base components layouts pages themes vendor


if [ -f ${MASTER_FILE} ];
then
    CREATE_STYLES=no
    ORIG_MASTER_FILE=${MASTER_FILE}
    MASTER_FILE=/tmp/styles.scss
    cat /dev/null > ${MASTER_FILE}

else
    CREATE_STYLES=yes
fi

for FILE in \
    'abstracts/_mixins' \
    'abstracts/_functions' \
    'abstracts/_variables' \
    'base/_animations' \
    'base/_base' \
    'base/_typography' \
    'base/_utilities' \
    'components/_button' \
    'components/_form' \
    'components/_menu' \
    'layouts/_grid' \
    'layouts/_container' \
    'layouts/_header' \
    'layouts/_footer' \
    'pages/_home'
do
    FILE_NAME=${FILE}.scss
    SCSS_NAME="${FILE/\/_/\/}"
    if [ ! -f ${FILE_NAME} ];then
        echo "Creating ${FILE_NAME}"
        touch ${FILE_NAME}
    else
        echo "${FILE_NAME} already exists"
    fi

    echo "Add ${FILE_NAME} to ${MASTER_FILE}"
    echo "@import \"${SCSS_NAME}\";" >> ${MASTER_FILE}
done

# ensure the theme and vendor directories get added to git repo
touch themes/.placeholder
touch vendor/.placeholder

if [ "${CREATE_STYLES}" != 'yes' ]; then
    echo "$ORIG_MASTER_FILE already existed - files may be added manually from $MASTER_FILE"
fi

cd ..

if [ ! "$DJANGO_PROJECT" -a ! -f index.html ]; then
    echo -e "\n*** Please note there is no index.html ***\n"
fi

echo -e "\nIf the above has no errors you should now be able to run a test" \
        "environment using:\n\n\tnpm run serve\n\nor simply watch for scss" \
        "changes using:\n\n\tnpm run scss-watch\n\n"
